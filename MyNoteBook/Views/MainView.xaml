<Window x:Class="MyNoteBook.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyNoteBook.Views"
        xmlns:prsim="http://prismlibrary.com/"
        prsim:ViewModelLocator.AutoWireViewModel="True"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:ext="clr-namespace:MyNoteBook.Extenstions"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="微软雅黑"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        mc:Ignorable="d"
        AllowsTransparency="True"
        Title="MainWindow" Height="768" Width="1280">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- data template used for the dialogs example, defines a View for a ViewModel of type DateTime -->
            <!--<DataTemplate DataType="{x:Type system:DateTime}">
                <StackPanel Margin="16">
                    <TextBlock Text="England win the World Cup:" />
                    <TextBlock Margin="0,8,0,0" Text="{Binding}" />
                    <TextBlock Margin="0,8,0,0" Text="You will never see that again." />
                    <Button Margin="0,8,0,0"
                  Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                  Content="AWESOME"
                  IsDefault="True"
                  Style="{StaticResource MaterialDesignFlatButton}" />
                </StackPanel>
            </DataTemplate>-->
        </ResourceDictionary>
    </Window.Resources>

    <materialDesign:DialogHost DialogTheme="Inherit" x:Name="DialogHost"
                             Identifier="Root"
                             SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">

        <materialDesign:DrawerHost x:Name="drawHost" IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="220">

                    <StackPanel Margin="0,20"  DockPanel.Dock="Top" Orientation="Vertical" HorizontalAlignment="Center">
                        <Image  Width="50" Height="50" Source="/images/user.jpeg">
                            <Image.Clip>
                                <EllipseGeometry Center="25,25" RadiusX="25" RadiusY="25"></EllipseGeometry>
                            </Image.Clip>
                        </Image>
                        <TextBlock Margin="0,10" Text="{Binding UserName}"></TextBlock>
                    </StackPanel>

                    <ListBox x:Name="menuBar" ItemContainerStyle="{StaticResource MyListBoxItemStyle}" ItemsSource="{Binding MenuBases}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding NavigateCommand}" CommandParameter="{Binding RelativeSource={RelativeSource 
                                         Mode=FindAncestor,
                                         AncestorType={x:Type ListBox}},
                                         Path=SelectedItem}"></i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel VerticalAlignment="Center" Orientation="Horizontal" Background="Transparent">
                                    <materialDesign:PackIcon Margin="15,0" Kind="{Binding Icon}" />
                                    <TextBlock Margin="10,0" Text="{Binding Title}" ></TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>

                <materialDesign:Snackbar x:Name="snackbar" MessageQueue="{materialDesign:MessageQueue}" Panel.ZIndex="1"></materialDesign:Snackbar>
                <materialDesign:ColorZone Padding="16"   x:Name="ColorZone"
                                  materialDesign:ElevationAssist.Elevation="Dp4"
                                  DockPanel.Dock="Top"
                                  Mode="PrimaryMid">
                    <DockPanel>
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton x:Name="MenuToggleButton"
                            AutomationProperties.Name="HamburgerToggleButton"
                            IsChecked="False"
                            Style="{StaticResource MaterialDesignHamburgerToggleButton}" />

                            <Button Margin="24,0,0,0"
                      materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                      Command="{Binding GoBackCommand}"
                      Content="{materialDesign:PackIcon Kind=ArrowLeft,
                                                        Size=24}"
                      Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                      Style="{StaticResource MaterialDesignToolButton}"
                      ToolTip="Previous Item" />

                            <Button Margin="16,0,0,0"
                      materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                      Command="{Binding GoForwardCommand}"
                      Content="{materialDesign:PackIcon Kind=ArrowRight,
                                                        Size=24}"
                      Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                      Style="{StaticResource MaterialDesignToolButton}"
                      ToolTip="Next Item" />

                            <TextBlock Margin="16,0,0,0"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       AutomationProperties.Name="MyNoteBook"
                       FontSize="22"
                       Text="记事本" />
                        </StackPanel>

                        <DockPanel LastChildFill="False" HorizontalAlignment="Right">
                            <materialDesign:PopupBox>
                                <materialDesign:PopupBox.ToggleContent>
                                    <Image Source="/images/user.jpeg" Width="25" Height="25">

                                        <Image.Clip>
                                            <EllipseGeometry Center="12.5,12.5" RadiusX="12.5" RadiusY="12.5">
                                            </EllipseGeometry>
                                        </Image.Clip>
                                    </Image>
                                </materialDesign:PopupBox.ToggleContent>
                                <StackPanel>
                                    <Button Command="{Binding LoginOutCommand}" Content="注销当前账户"></Button>
                                </StackPanel>
                            </materialDesign:PopupBox>
           
                            <Button x:Name="btnMin"  Content="—" Style="{StaticResource MaterialDesignFlatMidBgButton}"></Button>
                            <Button  x:Name="btnMax" Content="☐" Style="{StaticResource MaterialDesignFlatMidBgButton}"></Button>
                            <Button  x:Name="btnClose" Content="✕" Style="{StaticResource MaterialDesignFlatMidBgButton}"></Button>
                        </DockPanel>
                    </DockPanel>
                </materialDesign:ColorZone>

                <ContentControl Grid.Row="1" prsim:RegionManager.RegionName="{x:Static ext:PrsimManager.MainViewRegionName}"></ContentControl>
            </Grid>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
